<sample>

  <title>DlEntry</title>

  <text>


    <div class="object-info">
      <table>
        <tr>
          <td class="label">Name:</td>
          <td>DlEntry</td>
        </tr>
        <tr>
          <td class="label">Inherits:</td>
          <td>〈DlContainer〉</td>
        </tr>
        <tr>
          <td class="label">Defined in:</td>
          <td>〈entry.js〉</td>
        </tr>
        <tr>
          <td class="label">Requires:</td>
          <td>〈widget.js〉</td>
        </tr>
      </table>
    </div>

    <div class="constructor">
      <h2>Constructor</h2>
   <div class="method">
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">allowEmpty</td>
         <td class="doc"><span default="null" name="allowEmpty">Validate an empty value?</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional"></td>
         <td class="default">null</td>
       </tr>
       <tr>
         <td class="name">focusable</td>
         <td class="doc"><span default="2" name="focusable">Passed to <a href='api://DlWidget.xml'>DlWidget</a>, don't change this.</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional"></td>
         <td class="default">2</td>
       </tr>
       <tr>
         <td class="name">name</td>
         <td class="doc"><span default="null" name="name">Name of the input field</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional"></td>
         <td class="default">null</td>
       </tr>
       <tr>
         <td class="name">noSelect</td>
         <td class="doc"><span default="false" name="noSelect">Don't select contents on focus?</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional"></td>
         <td class="default">false</td>
       </tr>
       <tr>
         <td class="name">noWrap</td>
         <td class="doc"><span default="false" name="noWrap">Don't wrap contents? (for textareas)</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional"></td>
         <td class="default">false</td>
       </tr>
       <tr>
         <td class="name">readonly</td>
         <td class="doc"><span default="false" name="readonly">Read only?</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional"></td>
         <td class="default">false</td>
       </tr>
       <tr>
         <td class="name">rows</td>
         <td class="doc"><span default="null" name="rows">Number of rows (for textareas)</span>
</td>
         <td class="type">[<b>〈Number〉</b>]</td>
         <td class="optional"></td>
         <td class="default">null</td>
       </tr>
       <tr>
         <td class="name">size</td>
         <td class="doc"><span default="null" name="size">Input field size (for input)</span>
</td>
         <td class="type">[<b>〈Number〉</b>]</td>
         <td class="optional"></td>
         <td class="default">null</td>
       </tr>
       <tr>
         <td class="name">type</td>
         <td class="doc"><span default="&#34;text&#34;" name="type">DOM element type (see below)</span>
</td>
         <td class="type">[<b>〈String〉</b>]</td>
         <td class="optional"></td>
         <td class="default">"text"</td>
       </tr>
       <tr>
         <td class="name">validators</td>
         <td class="doc"><span default="[]" name="validators">Array of validators</span>
</td>
         <td class="type">[<b>〈Array〉</b>]</td>
         <td class="optional"></td>
         <td class="default">[]</td>
       </tr>
       <tr>
         <td class="name">value</td>
         <td class="doc"><span default="null" name="value">Initial value</span>
</td>
         <td class="type">[<b>〈String〉</b>]</td>
         <td class="optional"></td>
         <td class="default">null</td>
       </tr>
       <tr>
         <td class="name">width</td>
         <td class="doc"><span default="null" name="width">CSS width of the input field</span>
</td>
         <td class="type">[<b>〈String〉</b>]</td>
         <td class="optional"></td>
         <td class="default">null</td>
       </tr>
       <tr>
         <td class="name">emptyText</td>
         <td class="doc"><span default="&#34;&#34;" name="emptyText">Text to display when the field is empty</span>
</td>
         <td class="type">[<b>〈String〉</b>]</td>
         <td class="optional"></td>
         <td class="default">""</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
        A DlEntry is a very functional widget for receiving user
        input.  It can be an &lt;input&gt; element, or a
        &lt;textarea&gt;, based on what's passed in the <b>type</b>
        argument.  Accepted values for <b>type</b> are:
<p/>
        <ul>
          <li>"text" — create an ordinary input field (default)</li>
          <li>"password" — create a password input type</li>
          <li>"file" — create a file upload entry</li>
          <li>"hidden" — a hidden field</li>
          <li>"textarea" — a text area</li>
        </ul>
<p/>
        You can pass an array of <a href='api://DlValidator.xml'>DlValidator</a> objects in
        <b>validators</b>.  If you do, whenever the input field value
        is changed all validators will run in order and if any one
        fails the input field will get an error CSS class and triggers
        "onValidationError" event.  You can also force validation at
        any time by calling <a href='api://DlEntry.xml:type=object_method:func=validate'>validate()</a>.
<p/>
        See our <a href="sample://widgets-entry.xml">input field
        samples</a> for some detailed examples.
      </span>

     </div>
   </div>
    </div>

    <div class="events">
      <h2>Events</h2>
   <div class="method">
        <h3 id="onChange:object_event">onChange ()
        </h3>
     <div class="doc"><span>
          Triggered when the value of the input field has changed.
          Note that in case of user edit, this means when the focus
          has left the input field—it won't be triggered at each
          keypress, although the value does change.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="onKey-ENTER:object_event">onKey-ENTER ()
        </h3>
     <div class="doc"><span>
          Triggered when the ENTER key is pressed in the input field.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="onKey-ESCAPE:object_event">onKey-ESCAPE ()
        </h3>
     <div class="doc"><span>
          Triggered when the ESCAPE key is pressed in the input field.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="onValidation:object_event">onValidation ()
        </h3>
     <div class="doc"><span></span>

     </div>
   </div>
   <div class="method">
        <h3 id="onValidationError:object_event">onValidationError ()
        </h3>
     <div class="doc"><span>
          Triggered when the field validation has failed.
        </span>

     </div>
   </div>
    </div>


    <div class="object-methods">
      <h2>Instance methods</h2>
   <div class="method">
        <h3 id="blur:object_method">blur ()
        <div class="overrides">
             (overrides <a href="api://DlWidget.xml:type=object_method:func=blur">blur in DlWidget</a>)
        </div>
        </h3>
     <div class="doc"><span>
          Removes focus from the input field.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="clear:object_method">clear (<span class='param optional'>nocall</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">nocall</td>
         <td class="doc"><span default="false" name="nocall" optional="1">Don't call hooks?</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional">optional</td>
         <td class="default">false</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Clears the input field value.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="collapse:object_method">collapse (<span class='param'>atStart</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">atStart</td>
         <td class="doc"><span name="atStart">Collapse at start?</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          "Collapses" the selection in the input field.  This does
          nothing when there is no selection.  When there's some text
          selected, it deselects it leaving the caret at start if
          <b>atStart</b> is true, or at the end otherwise.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="disabled:object_method">disabled (<span class='param'>v</span>, <span class='param'>force</span>)
        <div class="overrides">
             (overrides <a href="api://DlContainer.xml:type=object_method:func=disabled">disabled in DlContainer</a>)
        </div>
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">v</td>
         <td class="doc"><span name="v"></span>
</td>
         <td class="type">—</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
       <tr>
         <td class="name">force</td>
         <td class="doc"><span name="force"></span>
</td>
         <td class="type">—</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span></span>

     </div>
   </div>
   <div class="method">
        <h3 id="focus:object_method">focus ()
        <div class="overrides">
             (overrides <a href="api://DlWidget.xml:type=object_method:func=focus">focus in DlWidget</a>)
        </div>
        </h3>
     <div class="doc"><span>
          Focuses the input field.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="getInputElement:object_method">getInputElement ()
        </h3>
   <div class="params">
     <table>
       <tr class="return">
         <td class="label">Returns:</td>
         <td class="doc" colspan="6">(type: HTMLElement) 
           <b><span>The input field element</span>
</b>
         </td>
       </tr>
     </table>
   </div>
     <div class="doc">
     </div>
   </div>
   <div class="method">
        <h3 id="getSelectionRange:object_method">getSelectionRange ()
        </h3>
   <div class="params">
     <table>
       <tr class="return">
         <td class="label">Returns:</td>
         <td class="doc" colspan="6">(type: Hash) 
           <b><span>{ start: selection_start, end: selection_end }</span>
</b>
         </td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Returns the selection range.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="getValue:object_method">getValue ()
        </h3>
     <div class="doc"><span>
          Returns the input field's value.  Note that when the field
          is empty this function returns the empty string (""), even
          if the DOM element might actually display something (see the
          <b>emptyText</b> argument in constructor).
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="initDOM:object_method">initDOM ()
        <div class="overrides">
             (overrides <a href="api://DlWidget.xml:type=object_method:func=initDOM">initDOM in DlWidget</a>)
        </div>
        </h3>
     <div class="doc"><span></span>

     </div>
   </div>
   <div class="method">
        <h3 id="isEmpty:object_method">isEmpty ()
        </h3>
     <div class="doc"><span></span>

     </div>
   </div>
   <div class="method">
        <h3 id="moveBOF:object_method">moveBOF ()
        </h3>
     <div class="doc"><span>
          Moves the caret at the start of the text.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="moveEOF:object_method">moveEOF ()
        </h3>
     <div class="doc"><span>
          Moves the caret at the end of the text.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="readonly:object_method">readonly (<span class='param optional'>readonly</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">readonly</td>
         <td class="doc"><span default="null" name="readonly" optional="1">Set read only?</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional">optional</td>
         <td class="default">null</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Returns (and optionally sets) the readonly state of the
          input field.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="select:object_method">select ()
        </h3>
     <div class="doc"><span>
          Selects all text.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="setIfEmpty:object_method">setIfEmpty (<span class='param'>value</span>, <span class='param optional'>nocall</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">value</td>
         <td class="doc"><span name="value">New value</span>
</td>
         <td class="type">[<b>〈String〉</b>]</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
       <tr>
         <td class="name">nocall</td>
         <td class="doc"><span default="false" name="nocall" optional="1">Don't call hooks?</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional">optional</td>
         <td class="default">false</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Sets the field value to <b>value</b> only if the field is
          currently empty.  <b>nocall</b> is passed to <a href='api://DlEntry.xml:type=object_method:func=setValue'>setValue()</a>.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="setOuterSize:object_method">setOuterSize (<span class='param'>size</span>)
        <div class="overrides">
             (overrides <a href="api://DlWidget.xml:type=object_method:func=setOuterSize">setOuterSize in DlWidget</a>)
        </div>
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">size</td>
         <td class="doc"><span name="size"></span>
</td>
         <td class="type">—</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span></span>

     </div>
   </div>
   <div class="method">
        <h3 id="setSelectionRange:object_method">setSelectionRange (<span class='param'>start</span>, <span class='param'>end</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">start</td>
         <td class="doc"><span name="start">Index of first char</span>
</td>
         <td class="type">[<b>〈Number〉</b>]</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
       <tr>
         <td class="name">end</td>
         <td class="doc"><span name="end">Index of last char</span>
</td>
         <td class="type">[<b>〈Number〉</b>]</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Selects the given portion of the text between <b>start</b>
          and <b>end</b>.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="setValue:object_method">setValue (<span class='param'>value</span>, <span class='param optional'>nocall</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">value</td>
         <td class="doc"><span name="value">New field value</span>
</td>
         <td class="type">[<b>〈String〉</b>]</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
       <tr>
         <td class="name">nocall</td>
         <td class="doc"><span default="false" name="nocall" optional="1">Don't call hooks?</span>
</td>
         <td class="type">[<b>〈boolean〉</b>]</td>
         <td class="optional">optional</td>
         <td class="default">false</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Sets a new field value.  If <b>value</b> is the empty
          string, this function will check if <b>emptyText</b> was
          specified in constructor and if so it will use that value
          (in this case, <a href='api://DlEntry.xml:type=object_method:func=getValue'>getValue()</a> will still return the empty
          string, since <b>emptyText</b> is for display enhancement
          only).
<p/>
          If <b>nocall</b> is false (default) it will trigger the
          "onChange" event.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="timerFocus:object_method">timerFocus (<span class='param'>timeout</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">timeout</td>
         <td class="doc"><span name="timeout">Milliseconds</span>
</td>
         <td class="type">[<b>〈Number〉</b>]</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Focuses the input field after the timeout.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="validate:object_method">validate (<span class='param optional'>val</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">val</td>
         <td class="doc"><span default="null" name="val" optional="1">Value to validate</span>
</td>
         <td class="type">[<b>〈String〉</b>]</td>
         <td class="optional">optional</td>
         <td class="default">null</td>
       </tr>
       <tr class="return">
         <td class="label">Returns:</td>
         <td class="doc" colspan="6">(type: boolean) 
           <b><span><b>true</b> if validation succeeded, <b>false</b> otherwise</span>
</b>
         </td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Runs the validators of this entry on the given <b>val</b>ue.
          Note that if you don't pass an argument, the validators will
          run on the entry value.  If there is an error, it will
          trigger "onValidationError", passing the value returned by
          <a href='api://DlValidator.xml:type=object_method:func=getError'>DlValidator::getError()</a>.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="_createElement:object_method">_createElement ()
        <div class="overrides">
             (overrides <a href="api://DlContainer.xml:type=object_method:func=_createElement">_createElement in DlContainer</a>)
        </div>
        </h3>
     <div class="doc"><span></span>

     </div>
   </div>
    </div>

  </text>


</sample>




