<sample>

  <title>DlHbox</title>

  <text>


    <div class="object-info">
      <table>
        <tr>
          <td class="label">Name:</td>
          <td>DlHbox</td>
        </tr>
        <tr>
          <td class="label">Inherits:</td>
          <td>〈DlBox〉</td>
        </tr>
        <tr>
          <td class="label">Defined in:</td>
          <td>〈hbox.js〉</td>
        </tr>
        <tr>
          <td class="label">Requires:</td>
          <td>〈box.js〉</td>
        </tr>
      </table>
    </div>

    <div class="constructor">
      <h2>Constructor</h2>
   <div class="method">
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">args</td>
         <td class="doc"><span name="args"></span>
</td>
         <td class="type">—</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
        A horizontal box container.  All arguments are passed to
        <a href='api://DlBox.xml'>DlBox</a>.
      </span>

     </div>
   </div>
    </div>



    <div class="object-methods">
      <h2>Instance methods</h2>
   <div class="method">
        <h3 id="addFiller:object_method">addFiller ()
        </h3>
     <div class="doc"><span>
          Adds a cell having maximum width, therefore pushing all
          content after it to the right.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="createCellElement:object_method">createCellElement (<span class='param optional'>pos</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">pos</td>
         <td class="doc"><span default="null" name="pos" optional="1">Reference cell</span>
</td>
         <td class="type">[<b>〈HTMLTableCellElement〉</b>]</td>
         <td class="optional">optional</td>
         <td class="default">null</td>
       </tr>
       <tr class="return">
         <td class="label">Returns:</td>
         <td class="doc" colspan="6">(type: HTMLTableCellElement) 
           <b><span>created cell</span>
</b>
         </td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Inserts a new cell in the table.  Usually it will be used to
          hold a new widget, but it can be a separator, spacer or
          filler cell as well.  If <b>pos</b> (reference cell) is
          specified, the new cell is inserted <b>before</b> pos.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="setAlign:object_method">setAlign (<span class='param optional'>left</span>, <span class='param optional'>right</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">left</td>
         <td class="doc"><span default="null" name="left" optional="1"></span>
</td>
         <td class="type">[<b>〈String〉</b>]</td>
         <td class="optional">optional</td>
         <td class="default">null</td>
       </tr>
       <tr>
         <td class="name">right</td>
         <td class="doc"><span default="null" name="right" optional="1"></span>
</td>
         <td class="type">[<b>〈String〉</b>]</td>
         <td class="optional">optional</td>
         <td class="default">null</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Sets the alignment of the box relative to the parent
          container.  You can pass 2 kinds of values.  You can omit
          <b>right</b> and pass "left", "center" or "right" for the
          first argument (<b>left</b>) — the table will be aligned
          accordingly.
<p/>
          Or you can pass values suitable for the margin-left or
          margin-right CSS properties, like this:
<p/>
          <div sample="DlHbox1"></div>
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="setEqualWidths:object_method">setEqualWidths (<span class='param optional'>d</span>)
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">d</td>
         <td class="doc"><span default="null" name="d" optional="1"></span>
</td>
         <td class="type">[<b>〈Number〉</b>]</td>
         <td class="optional">optional</td>
         <td class="default">null</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Sometimes useful when you only have buttons in the box, this
          method will set all child widgets to have the same width.
          This is done in 2 steps; first we find out the maximum
          width, then we set all widgets to that width.
<p/>
          If you pass <b>d</b>, it will add that number of pixels to
          the maximum width.
        </span>

     </div>
   </div>
   <div class="method">
        <h3 id="_createElement:object_method">_createElement ()
        <div class="overrides">
             (overrides <a href="api://DlBox.xml:type=object_method:func=_createElement">_createElement in DlBox</a>)
        </div>
        </h3>
     <div class="doc"><span></span>

     </div>
   </div>
   <div class="method">
        <h3 id="_removeWidgetElement:object_method">_removeWidgetElement (<span class='param'>w</span>)
        <div class="overrides">
             (overrides <a href="api://DlContainer.xml:type=object_method:func=_removeWidgetElement">_removeWidgetElement in DlContainer</a>)
        </div>
        </h3>
   <div class="params">
     <table>
       <tr class="head">
         <td class="name">Arguments</td>
         <td class="doc">Notes</td>
         <td class="type">Type</td>
         <td class="optional"></td>
         <td class="default">Default</td>
       </tr>
       <tr>
         <td class="name">w</td>
         <td class="doc"><span name="w"></span>
</td>
         <td class="type">—</td>
         <td class="optional"></td>
         <td class="default">—</td>
       </tr>
     </table>
   </div>
     <div class="doc"><span>
          Overrides <a href='api://DlContainer.xml:type=object_method:func=_removeWidgetElement'>DlContainer::_removeWidgetElement()</a> in order to
          remove the parent cells for each widget.
        </span>

     </div>
   </div>
    </div>

  </text>
<code id="DlHbox1" type="js">
            // the box will be 15 pixels far from
            // the left edge of the parent
            box.setAlign("15px")
          </code>


</sample>




